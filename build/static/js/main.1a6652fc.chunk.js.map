{"version":3,"sources":["components/EstimateCreator.js","helpers.js","components/Header.js","components/AddResourceForm.js","components/EditResourceForm.js","base.js","components/Estimate.js","components/Client.js","components/AddTaskForm.js","components/EditTaskForm.js","components/Login.js","components/Tasks.js","components/AddTechStackForm.js","components/TechStack.js","components/Technologies.js","components/Terms.js","sample-tasks.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["EstimateCreator","projectNameRef","React","createRef","clientNameRef","dateRef","versionNumberRef","estimateNumberRef","goToEstimate","event","preventDefault","client","projectName","_this","current","value","clientName","date","versionNumber","parseFloat","estimateNumber","estimate","toString","toLowerCase","replace","props","history","push","pathname","concat","react_default","a","createElement","Fragment","className","action","onSubmit","this","htmlFor","type","ref","required","placeholder","name","defaultValue","step","Date","getFullYear","href","target","rel","Component","Header","AddResourceForm","addResourceFormRef","resourceQuantityRef","resourceTypeRef","resourceAvailabilityRef","addAnotherResource","resource","quantity","availability","addResource","Object","keys","auth","length","classList","add","owner","uid","remove","onClick","EditResourceForm","removeResourceButtonRef","handleChange","updatedResource","objectSpread","resources","defineProperty","currentTarget","updateResource","index","checkAuth","setAttribute","removeAttribute","_this2","onChange","deleteResource","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Estimate","removeFromEstimateRef","totalTimeRef","adminTimeRef","hourlyValueRef","minTimeRef","avgTimeRef","maxTimeRef","expectedTimeRef","state","time","cost","renderEstimate","key","task","tasks","count","taskName","removeFromEstimate","section","minHours","avgHours","maxHours","expectedHours","calculateTotalHours","adminTime","totalPrice","totalTime","thirdsRule","toFixed","setState","subTotal","isNaN","calculateTotalPrice","hourlyValue","calculateDeadlines","calculation","Math","round","values","reduce","prevNumber","innerHTML","syncState","estimateId","context","undefined","removeBinding","estimateIds","disabled","prevTotal","totalHours","map","components_EditResourceForm","components_AddResourceForm","Client","loadClientDataButtonRef","details","_this$props$details","addClient","AddTaskForm","taskRef","sectionRef","minHoursRef","avgHoursRef","maxHoursRef","expectedHoursRef","createTask","sectionName","addTask","reset","setExpectedHours","sum","sigma","EditTaskForm","updatedTask","updateTask","handleExpectedHoursChange","deleteTask","addToEstimate","Login","authenticate","Tasks","authHandler","_callee","authData","regenerator_default","wrap","_context","prev","next","fetch","assertThisInitialized","sent","post","data","user","propagateAuthState","stop","provider","authProvider","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditTaskForm","components_AddTaskForm","loadSampleTasks","components_Login","AddTechStackForm","imageRef","typeRef","nameRef","createTechStack","tech","image","addTechStack","TechStack","techStackFormRef","components_AddTechStackForm","Technologies","renderTech","src","alt","techIds","Terms","task1","task2","task3","task4","task5","task6","task7","task8","task9","task10","task11","task12","task13","task14","task15","task16","task17","task18","task19","task20","task21","task22","task23","task24","task25","task26","task27","task28","task29","task30","task31","task32","task33","task34","task35","task36","task37","task38","task39","task40","task41","task42","task43","App","technologies","now","location","sampleTasks","params","match","components_Header","components_Client","components_Estimate","components_Technologies","components_Terms","components_Tasks","components_TechStack","NotFound","Router","BrowserRouter","Switch","Route","exact","path","component","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.1a6652fc.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { slugify } from \"../helpers\";\n\nclass EstimateCreator extends React.Component {\n  projectNameRef = React.createRef();\n  clientNameRef = React.createRef();\n  dateRef = React.createRef();\n  versionNumberRef = React.createRef();\n  estimateNumberRef = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object.isRequired\n  };\n\n  goToEstimate = event => {\n    // Stop the form from submitting\n    event.preventDefault();\n    // Store the rest of the info on an object\n    const client = {\n      projectName: this.projectNameRef.current.value,\n      clientName: this.clientNameRef.current.value,\n      date: this.dateRef.current.value,\n      versionNumber: parseFloat(this.versionNumberRef.current.value),\n      estimateNumber: parseFloat(this.estimateNumberRef.current.value)\n    };\n    // Get the text from the input\n    const estimate = slugify(this.projectNameRef.current.value);\n    // Change the page\n    this.props.history.push({ pathname: `/estimate/${estimate}`, client });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <header>\n          <h1>\n            Software Development <strong>Estimate</strong>\n          </h1>\n          <p>\n            Juan Mart&iacute;n Garc&iacute;a – Product Designer &amp; Frontend\n            Developer\n          </p>\n          <hr />\n        </header>\n        <section className=\"create-project\">\n          <form action=\"\" onSubmit={this.goToEstimate}>\n            <h2>Please Enter the details of the project to estimate</h2>\n            <fieldset>\n              <label htmlFor=\"projectName\">Project Name</label>\n              <input\n                type=\"text\"\n                ref={this.projectNameRef}\n                required\n                placeholder=\"Enter the Project Name Here\"\n                name=\"projectName\"\n              />\n            </fieldset>\n            <fieldset>\n              <label htmlFor=\"clientName\">Client Name</label>\n              <input\n                type=\"text\"\n                ref={this.clientNameRef}\n                required\n                placeholder=\"Enter the Client Name Here\"\n                name=\"clientName\"\n              />\n            </fieldset>\n            <fieldset>\n              <label htmlFor=\"date\">Estimate Date</label>\n              <input type=\"date\" ref={this.dateRef} required name=\"date\" />\n            </fieldset>\n            <fieldset>\n              <label htmlFor=\"versionNumber\">Estimate Version Number</label>\n              <input\n                type=\"number\"\n                ref={this.versionNumberRef}\n                required\n                placeholder=\"Enter Version Number Here\"\n                name=\"versionNumber\"\n                defaultValue={1.0}\n                step=\"0.1\"\n              />\n            </fieldset>\n            <fieldset>\n              <label htmlFor=\"estimateNumber\">Estimate Number</label>\n              <input\n                type=\"number\"\n                ref={this.estimateNumberRef}\n                required\n                name=\"estimateNumber\"\n                placeholder=\"Enter Estimate Number Here\"\n              />\n            </fieldset>\n            <button type=\"submit\">Go to the estimate</button>\n          </form>\n        </section>\n        <footer>\n          &copy; {new Date().getFullYear()} JMG. Designed and Developed by{\" \"}\n          <a\n            href=\"https://www.juangarcia.design\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Juan Mart&iacute;n Garc&iacute;a\n          </a>\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EstimateCreator;\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n","import React from \"react\";\n\nconst Header = () => (\n  <header>\n    <h1>\n      Software Development <strong>Estimate</strong>\n    </h1>\n    <p>\n      Juan Mart&iacute;n Garc&iacute;a – Product Designer &amp; Frontend\n      Developer\n    </p>\n    <hr />\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddResourceForm extends React.Component {\n  // Refs\n  addResourceFormRef = React.createRef();\n  resourceQuantityRef = React.createRef();\n  resourceTypeRef = React.createRef();\n  resourceAvailabilityRef = React.createRef();\n\n  // Proptypes\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    addResource: PropTypes.func.isRequired\n  };\n\n  // Lifecycle methods\n  componentDidUpdate() {\n    // if they're not logged in\n    if (Object.keys(this.props.auth).length === 0) {\n      this.addResourceFormRef.current.classList.add(\"hidden\");\n    }\n    // if they're logged in, but they're now owners\n    else if (this.props.auth.owner !== this.props.auth.uid) {\n      this.addResourceFormRef.current.classList.add(\"hidden\");\n    }\n    // if they're owners\n    else {\n      this.addResourceFormRef.current.classList.remove(\"hidden\");\n    }\n  }\n\n  // Custom functions\n  addAnotherResource = event => {\n    event.preventDefault();\n\n    const resource = {\n      quantity: parseFloat(this.resourceQuantityRef.current.value),\n      type: this.resourceTypeRef.current.value,\n      availability: parseFloat(this.resourceAvailabilityRef.current.value)\n    };\n\n    this.props.addResource(resource);\n  };\n  render() {\n    return (\n      <tr ref={this.addResourceFormRef}>\n        <td>\n          <input\n            type=\"number\"\n            name=\"resourceQuantity\"\n            placeholder=\"Set Quantity here\"\n            ref={this.resourceQuantityRef}\n          />\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            name=\"resourceType\"\n            placeholder=\"Type of resouce here\"\n            ref={this.resourceTypeRef}\n          />\n        </td>\n        <td>\n          <input\n            type=\"number\"\n            name=\"resourceAvailability\"\n            placeholder=\"Set Availability here\"\n            ref={this.resourceAvailabilityRef}\n          />\n          hours/week\n        </td>\n        <td>\n          <button type=\"submit\" onClick={this.addAnotherResource}>\n            Add resource\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default AddResourceForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditResourceForm extends React.Component {\n  // Refs\n  removeResourceButtonRef = React.createRef();\n  resourceQuantityRef = React.createRef();\n  resourceTypeRef = React.createRef();\n  resourceAvailabilityRef = React.createRef();\n\n  // PropTypes\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    resources: PropTypes.object.isRequired,\n    resource: PropTypes.object.isRequired,\n    index: PropTypes.string.isRequired,\n    updateResource: PropTypes.func.isRequired,\n    deleteResource: PropTypes.func.isRequired\n  };\n\n  // Lifecycle methods\n  componentDidMount() {\n    this.checkAuth();\n  }\n\n  componentDidUpdate() {\n    this.checkAuth();\n  }\n\n  // Custom functions\n  handleChange = event => {\n    const updatedResource = {\n      ...this.props.resources,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n\n    this.props.updateResource(this.props.index, updatedResource);\n  };\n\n  checkAuth = () => {\n    // if they're not logged in\n    if (Object.keys(this.props.auth).length === 0) {\n      this.resourceQuantityRef.current.setAttribute(\"disabled\", true);\n      this.resourceTypeRef.current.setAttribute(\"disabled\", true);\n      this.resourceAvailabilityRef.current.setAttribute(\"disabled\", true);\n      this.removeResourceButtonRef.current.classList.add(\"hidden\");\n    }\n    // if they're logged in, but they're now owners\n    else if (this.props.auth.owner !== this.props.auth.uid) {\n      this.resourceQuantityRef.current.setAttribute(\"disabled\", true);\n      this.resourceTypeRef.current.setAttribute(\"disabled\", true);\n      this.resourceAvailabilityRef.current.setAttribute(\"disabled\", true);\n      this.removeResourceButtonRef.current.classList.add(\"hidden\");\n    }\n    // if they're owners\n    else {\n      this.resourceQuantityRef.current.removeAttribute(\"disabled\");\n      this.resourceTypeRef.current.removeAttribute(\"disabled\");\n      this.resourceAvailabilityRef.current.removeAttribute(\"disabled\");\n      this.removeResourceButtonRef.current.classList.remove(\"hidden\");\n    }\n  };\n\n  render() {\n    return (\n      <tr>\n        <td>\n          <input\n            type=\"number\"\n            name=\"quantity\"\n            placeholder=\"Set Quantity here\"\n            required\n            ref={this.resourceQuantityRef}\n            onChange={this.handleChange}\n            value={this.props.resource.quantity}\n          />\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            name=\"type\"\n            placeholder=\"Type of resouce here\"\n            required\n            ref={this.resourceTypeRef}\n            onChange={this.handleChange}\n            value={this.props.resource.type}\n          />\n        </td>\n        <td>\n          <input\n            type=\"number\"\n            name=\"availability\"\n            placeholder=\"Set Availability here\"\n            required\n            ref={this.resourceAvailabilityRef}\n            onChange={this.handleChange}\n            value={this.props.resource.availability}\n          />\n          hours/week\n        </td>\n        <td>\n          <button\n            onClick={() => this.props.deleteResource(this.props.index)}\n            ref={this.removeResourceButtonRef}\n          >\n            Remove resource\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default EditResourceForm;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyB8dUEtyAkwkRSpAued29RIVj7btJc53Jg\",\n  authDomain: \"software-estimation-tool-26e17.firebaseapp.com\",\n  databaseURL: \"https://software-estimation-tool-26e17.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddResourceForm from \"./AddResourceForm\";\nimport EditResourceForm from \"./EditResourceForm\";\nimport base from \"../base\";\n\nclass Estimate extends React.Component {\n  // Refs\n  removeFromEstimateRef = React.createRef();\n  totalTimeRef = React.createRef();\n  adminTimeRef = React.createRef();\n  hourlyValueRef = React.createRef();\n  minTimeRef = React.createRef();\n  avgTimeRef = React.createRef();\n  maxTimeRef = React.createRef();\n  expectedTimeRef = React.createRef();\n\n  // State\n  state = {\n    time: {},\n    resources: {},\n    cost: {}\n  };\n\n  // Proptypes\n  static propTypes = {\n    tasks: PropTypes.object.isRequired,\n    estimate: PropTypes.object.isRequired,\n    estimateId: PropTypes.string.isRequired,\n    auth: PropTypes.object.isRequired,\n    removeFromEstimate: PropTypes.func.isRequired,\n    resources: PropTypes.object.isRequired,\n    addResource: PropTypes.func.isRequired,\n    updateResource: PropTypes.func.isRequired,\n    deleteResource: PropTypes.func.isRequired\n  };\n\n  // Lifecycle methods\n  componentDidMount() {\n    this.ref = base.syncState(`${this.props.estimateId}/time`, {\n      context: this,\n      state: \"time\"\n    });\n    this.ref = base.syncState(`${this.props.estimateId}/cost`, {\n      context: this,\n      state: \"cost\"\n    });\n  }\n\n  componentDidUpdate() {\n    if (\n      this.totalTimeRef.current.value !== \"\" &&\n      this.adminTimeRef.current.value !== undefined &&\n      this.adminTimeRef.current.value !== \"\"\n    ) {\n      this.calculateTotalHours();\n    }\n\n    // if they're not logged in\n    if (Object.keys(this.props.auth).length === 0) {\n      this.adminTimeRef.current.setAttribute(\"disabled\", true);\n      this.hourlyValueRef.current.setAttribute(\"disabled\", true);\n    }\n    // if they're logged in, but they're now owners\n    else if (this.props.auth.owner !== this.props.auth.uid) {\n      this.adminTimeRef.current.setAttribute(\"disabled\", true);\n      this.hourlyValueRef.current.setAttribute(\"disabled\", true);\n    }\n    // if they're owners\n    else {\n      this.adminTimeRef.current.removeAttribute(\"disabled\");\n      this.hourlyValueRef.current.removeAttribute(\"disabled\");\n    }\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  renderEstimate = key => {\n    const task = this.props.tasks[key];\n    const count = this.props.estimate[key];\n    if (task) {\n      return (\n        <tr key={key}>\n          <td>\n            {count} {count > 1 ? \"units\" : \"unit\"} of {task.taskName}\n            <button\n              ref={this.removeFromEstimateRef}\n              onClick={() => this.props.removeFromEstimate(key)}\n              className={\n                Object.keys(this.props.auth).length === 0 ||\n                this.props.auth.owner !== this.props.auth.uid\n                  ? \"cross hidden\"\n                  : \"cross\"\n              }\n            >\n              &times;\n            </button>\n          </td>\n          <td>{task.section}</td>\n          <td>{task.minHours}</td>\n          <td>{task.avgHours}</td>\n          <td>{task.maxHours}</td>\n          <td>{task.expectedHours}</td>\n        </tr>\n      );\n    }\n  };\n\n  calculateTotalHours = () => {\n    const adminTime = this.adminTimeRef.current.value;\n    const totalPrice =\n      this.state.time.totalTime * this.hourlyValueRef.current.value;\n    const thirdsRule = (this.totalTimeRef.current.value / 100) * adminTime;\n    const totalTime = (+this.totalTimeRef.current.value + thirdsRule).toFixed(\n      2\n    );\n    this.setState({\n      time: {\n        subTotal: this.totalTimeRef.current.value,\n        adminTime,\n        totalTime\n      }\n    });\n    if (isNaN(totalPrice) || totalPrice === 0) {\n    } else {\n      this.calculateTotalPrice();\n    }\n  };\n\n  calculateTotalPrice = () => {\n    const hourlyValue = parseFloat(this.hourlyValueRef.current.value);\n    const totalPrice = this.state.time.totalTime * hourlyValue;\n\n    this.setState({\n      cost: {\n        hourlyValue,\n        totalPrice\n      }\n    });\n\n    this.calculateDeadlines();\n  };\n\n  calculateDeadlines = () => {\n    const calculation = Math.round(\n      this.state.time.totalTime /\n        Object.values(this.props.resources).reduce(function(\n          prevNumber,\n          resource\n        ) {\n          return +prevNumber + +resource.availability;\n        },\n        \"\")\n    );\n\n    this.minTimeRef.current.innerHTML = calculation;\n    this.avgTimeRef.current.innerHTML = calculation * 1.5;\n    this.maxTimeRef.current.innerHTML = calculation * 2;\n    this.expectedTimeRef.current.innerHTML =\n      (+this.maxTimeRef.current.innerHTML +\n        +this.minTimeRef.current.innerHTML +\n        +this.avgTimeRef.current.innerHTML * 4) /\n      6;\n  };\n\n  render() {\n    const estimateIds = Object.keys(this.props.estimate);\n    return (\n      <React.Fragment>\n        <section className=\"estimate\">\n          <h2>Work Plan Summary</h2>\n          <p>\n            The following is a summary of the Time, Costs, Resources, and\n            Deadlines estimates, all of which will be covered in further detail\n            below.\n          </p>\n          <h3>Time</h3>\n          <table>\n            <thead>\n              <tr>\n                <td>Ideal Hours (rounded)</td>\n                <td>Extra % for Admin Time</td>\n                <td>Total Hours (rounded)</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <input\n                    type=\"number\"\n                    ref={this.totalTimeRef}\n                    name=\"total\"\n                    disabled\n                    defaultValue={estimateIds.reduce((prevTotal, key) => {\n                      const task = this.props.tasks[key];\n                      if (task !== undefined) {\n                        const count = this.props.estimate[key];\n                        const totalHours = parseFloat(\n                          prevTotal + count * task.expectedHours\n                        );\n                        return Math.round(totalHours);\n                      } else {\n                        return 0;\n                      }\n                    }, \"\")}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"number\"\n                    ref={this.adminTimeRef}\n                    name=\"admin\"\n                    onChange={this.calculateTotalHours}\n                    defaultValue={this.state.time.adminTime}\n                    placeholder=\"Add Admin Time Here\"\n                    required\n                  />\n                  %\n                </td>\n                <td>{Math.round(this.state.time.totalTime)}</td>\n              </tr>\n            </tbody>\n          </table>\n          <h3>Costs</h3>\n          <table>\n            <thead>\n              <tr>\n                <td>Hourly Value based on the Project Complexity</td>\n                <td>Cost according to Total Hours</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  $\n                  <input\n                    type=\"number\"\n                    required\n                    name=\"hour\"\n                    ref={this.hourlyValueRef}\n                    placeholder=\"Set Hourly Value Here\"\n                    onChange={this.calculateTotalPrice}\n                    defaultValue={this.state.cost.hourlyValue}\n                  />\n                </td>\n                <td>\n                  <strong>${this.state.cost.totalPrice}</strong>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <h3>Resources</h3>\n          <table>\n            <thead>\n              <tr>\n                <td>Quantity</td>\n                <td>Type</td>\n                <td>Availability</td>\n                <td>&nbsp;</td>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(this.props.resources).map(key => (\n                <EditResourceForm\n                  key={key}\n                  index={key}\n                  resource={this.props.resources[key]}\n                  updateResource={this.props.updateResource}\n                  deleteResource={this.props.deleteResource}\n                  auth={this.props.auth}\n                />\n              ))}\n              <AddResourceForm\n                auth={this.props.auth}\n                addResource={this.props.addResource}\n              />\n            </tbody>\n          </table>\n          <h3>\n            Deadlines<sup>*</sup> (rounded)\n          </h3>\n          <table>\n            <thead>\n              <tr>\n                <td>Minimum</td>\n                <td>Average</td>\n                <td>Maximum</td>\n                <td>Expected</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <span ref={this.minTimeRef} /> weeks\n                </td>\n                <td>\n                  <span ref={this.avgTimeRef} /> weeks\n                </td>\n                <td>\n                  <span ref={this.maxTimeRef} /> weeks\n                </td>\n                <td>\n                  <strong>\n                    <span ref={this.expectedTimeRef} /> weeks\n                  </strong>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <hr />\n          <h2>Task Estimation</h2>\n          <p>\n            The following section contains the detailed estimation of stages and\n            tasks for the project and the expected time for each. The\n            calculation is done through the 6-sigma methodology, use the\n            following formula to calculate the expected time:{\" \"}\n            <span>exp = (max + min + 4*avg)/6</span>. The measurement unit used\n            is Hours, and values will be rounded if necessary. Any stage or task\n            not envisioned below and added after the budget's approval should be\n            quoted separately.\n          </p>\n          <table>\n            <thead>\n              <tr>\n                <td>Task</td>\n                <td>Stage</td>\n                <td>Minimum Hours</td>\n                <td>Average Hours</td>\n                <td>Maximum Hours</td>\n                <td>Expected Hours</td>\n              </tr>\n            </thead>\n            <tbody>{estimateIds.map(this.renderEstimate)}</tbody>\n          </table>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Estimate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Client extends React.Component {\n  // Refs\n  loadClientDataButtonRef = React.createRef();\n\n  // Proptypes\n  static propTypes = {\n    details: PropTypes.shape({\n      clientName: PropTypes.string.isRequired,\n      projectName: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      estimateNumber: PropTypes.number.isRequired,\n      versionNumber: PropTypes.number.isRequired\n    }),\n    addClient: PropTypes.func.isRequired\n  };\n\n  // Lifecycle methods\n  componentDidUpdate() {\n    if (Object.keys(this.props.details).length !== 0) {\n      this.loadClientDataButtonRef.current.classList.add(\"hidden\");\n    }\n  }\n  render() {\n    const {\n      clientName,\n      projectName,\n      date,\n      estimateNumber,\n      versionNumber\n    } = this.props.details;\n    return (\n      <section className=\"client\">\n        <h3>Client &amp; Project Details</h3>\n        <button\n          ref={this.loadClientDataButtonRef}\n          onClick={this.props.addClient}\n        >\n          Load Client Data\n        </button>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <h4>Project:</h4> {projectName}\n              </td>\n              <td>\n                <h4>Client:</h4> {clientName}\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <h4>Date:</h4> {date}\n              </td>\n              <td>\n                <h4>Author:</h4> Juan Mart&iacute;n Garc&iacute;a\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <h4>Version:</h4> {versionNumber}\n              </td>\n              <td>\n                <h4>Estimate Number:</h4> {estimateNumber}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nexport default Client;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddTaskForm extends React.Component {\n  taskRef = React.createRef();\n  sectionRef = React.createRef();\n  minHoursRef = React.createRef();\n  avgHoursRef = React.createRef();\n  maxHoursRef = React.createRef();\n  expectedHoursRef = React.createRef();\n\n  static propTypes = {\n    addTask: PropTypes.func.isRequired\n  };\n\n  createTask = event => {\n    // Stop the form from submitting\n    event.preventDefault();\n\n    // Do math to calculate the expected hours\n    const minHours = parseFloat(this.minHoursRef.current.value);\n    const avgHours = parseFloat(this.avgHoursRef.current.value);\n    const maxHours = parseFloat(this.maxHoursRef.current.value);\n    const expectedHours = parseFloat(this.expectedHoursRef.current.value);\n\n    // Create the task object\n    const task = {\n      taskName: this.taskRef.current.value,\n      sectionName: this.sectionRef.current.value,\n      minHours,\n      avgHours,\n      maxHours,\n      expectedHours\n    };\n    this.props.addTask(task);\n    // Refresh the form\n    event.currentTarget.reset();\n  };\n\n  setExpectedHours = () => {\n    if (\n      this.maxHoursRef.current.value &&\n      this.minHoursRef.current.value !== \"undefined\"\n    ) {\n      const sum =\n        +this.maxHoursRef.current.value + +this.minHoursRef.current.value;\n      const sigma = +this.avgHoursRef.current.value * 4;\n      this.expectedHoursRef.current.value = (sum + sigma) / 6;\n    }\n  };\n  render() {\n    return (\n      <form onSubmit={this.createTask}>\n        <fieldset>\n          <label htmlFor=\"task\">Task Name</label>\n          <input\n            required\n            name=\"task\"\n            ref={this.taskRef}\n            type=\"text\"\n            placeholder=\"Task\"\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"section\">Section Name</label>\n          <select required name=\"section\" ref={this.sectionRef}>\n            <option value=\"Definición\">Definici&oacute;n</option>\n            <option value=\"Iniciación\">Iniciaci&oacute;n</option>\n            <option value=\"Realización: Frontend\">\n              Realizaci&oacute;n: Frontend\n            </option>\n            <option value=\"Backend: APIs\">Backend: APIs</option>\n            <option value=\"Backend: Base de datos\">\n              Backend: Base de datos\n            </option>\n            <option value=\"Realización: Backend\">\n              Realizaci&oacute;n: Backend\n            </option>\n            <option value=\"Responsive: Frontend\">Responsive: Frontend</option>\n            <option value=\"Responsive: Backend\">Responsive: Backend</option>\n            <option value=\"Testing\">Testing</option>\n          </select>\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"minhours\">Minimum hours</label>\n          <input\n            required\n            name=\"minhours\"\n            ref={this.minHoursRef}\n            type=\"number\"\n            placeholder=\"Minimum Hours\"\n            onChange={this.setExpectedHours}\n            step=\".01\"\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"avghours\">Average hours</label>\n          <input\n            required\n            name=\"avghours\"\n            ref={this.avgHoursRef}\n            type=\"number\"\n            placeholder=\"Average Hours\"\n            onChange={this.setExpectedHours}\n            step=\".01\"\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"maxhours\">Maximum hours</label>\n          <input\n            required\n            name=\"maxhours\"\n            ref={this.maxHoursRef}\n            type=\"number\"\n            placeholder=\"Maximum Hours\"\n            onChange={this.setExpectedHours}\n            step=\".01\"\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"expectedhours\">Expected hours</label>\n          <input\n            required\n            name=\"expectedhours\"\n            ref={this.expectedHoursRef}\n            type=\"text\"\n            placeholder=\"Expected Hours\"\n            disabled\n            step=\".01\"\n          />\n        </fieldset>\n        <button type=\"submit\">+ Add Task</button>\n      </form>\n    );\n  }\n}\n\nexport default AddTaskForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditTaskForm extends React.Component {\n  static propTypes = {\n    task: PropTypes.shape({\n      taskName: PropTypes.string.isRequired,\n      sectionName: PropTypes.string.isRequired,\n      minHours: PropTypes.number.isRequired,\n      avgHours: PropTypes.number.isRequired,\n      maxHours: PropTypes.number.isRequired,\n      expectedHours: PropTypes.number.isRequired\n    }),\n    index: PropTypes.string.isRequired,\n    updateTask: PropTypes.func.isRequired\n  };\n  handleChange = event => {\n    switch (event.currentTarget.name) {\n      case \"minHours\":\n        let sum = +this.props.task.maxHours + +event.currentTarget.value;\n        let sigma = +this.props.task.avgHours * 4;\n        this.props.task.expectedHours = (sum + sigma) / 6;\n        break;\n      case \"avgHours\":\n        sum = +this.props.task.minHours + +this.props.task.maxHours;\n        sigma = +event.currentTarget.value * 4;\n        this.props.task.expectedHours = (sum + sigma) / 6;\n        break;\n      case \"maxHours\":\n        sum = +this.props.task.minHours + +event.currentTarget.value;\n        sigma = +this.props.task.avgHours * 4;\n        this.props.task.expectedHours = (sum + sigma) / 6;\n        break;\n      default:\n        break;\n    }\n    // Update the task\n    const updatedTask = {\n      ...this.props.task,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateTask(this.props.index, updatedTask);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <h3>Task: {this.props.task.taskName}</h3>\n        <form>\n          <fieldset>\n            <label htmlFor=\"taskName\">Task Name</label>\n            <input\n              type=\"text\"\n              name=\"taskName\"\n              onChange={this.handleChange}\n              value={this.props.task.taskName}\n            />\n          </fieldset>\n          <fieldset>\n            <label htmlFor=\"sectionName\">Section Name</label>\n            <select\n              name=\"sectionName\"\n              onChange={this.handleChange}\n              value={this.props.task.section}\n            >\n              <option value=\"Definición\">Definici&oacute;n</option>\n              <option value=\"Iniciación\">Iniciaci&oacute;n</option>\n              <option value=\"Realización: Frontend\">\n                Realizaci&oacute;n: Frontend\n              </option>\n              <option value=\"Backend: APIs\">Backend: APIs</option>\n              <option value=\"Backend: Base de datos\">\n                Backend: Base de datos\n              </option>\n              <option value=\"Realización: Backend\">\n                Realizaci&oacute;n: Backend\n              </option>\n              <option value=\"Responsive: Frontend\">Responsive: Frontend</option>\n              <option value=\"Responsive: Backend\">Responsive: Backend</option>\n              <option value=\"Testing\">Testing</option>\n            </select>\n          </fieldset>\n          <fieldset>\n            <label htmlFor=\"minHours\">Minimum Hours</label>\n            <input\n              type=\"number\"\n              name=\"minHours\"\n              onChange={this.handleChange}\n              value={this.props.task.minHours}\n              step=\".01\"\n            />\n          </fieldset>\n          <fieldset>\n            <label htmlFor=\"avgHours\">Average Hours</label>\n            <input\n              type=\"number\"\n              name=\"avgHours\"\n              onChange={this.handleChange}\n              value={this.props.task.avgHours}\n              step=\".01\"\n            />\n          </fieldset>\n          <fieldset>\n            <label htmlFor=\"maxHours\">Maximum Hours</label>\n            <input\n              type=\"number\"\n              name=\"maxHours\"\n              onChange={this.handleChange}\n              value={this.props.task.maxHours}\n              step=\".01\"\n            />\n          </fieldset>\n          <fieldset>\n            <label htmlFor=\"expectedHours\">Expected Hours</label>\n            <input\n              type=\"number\"\n              name=\"expectedHours\"\n              onChange={this.handleExpectedHoursChange}\n              value={this.props.task.expectedHours}\n              step=\".01\"\n              disabled\n            />\n          </fieldset>\n          <button\n            className=\"remove\"\n            onClick={() => this.props.deleteTask(this.props.index)}\n          >\n            Remove Task\n          </button>\n          <button\n            type=\"button\"\n            className=\"add\"\n            onClick={() => this.props.addToEstimate(this.props.index)}\n          >\n            {\" \"}\n            Add To Estimate\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EditTaskForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => {\n  return (\n    <section className=\"tasks\">\n      <h1>\n        Admin Area: <strong>Login</strong>\n      </h1>\n      <p>Sign in to manage the tasks on this estimate</p>\n      <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n        Log in with GitHub\n      </button>\n      <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n        Log in with Twitter\n      </button>\n      <button\n        className=\"facebook\"\n        onClick={() => props.authenticate(\"Facebook\")}\n      >\n        Log in with Facebook\n      </button>\n    </section>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddTaskForm from \"./AddTaskForm\";\nimport EditTaskForm from \"./EditTaskForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Tasks extends React.Component {\n  static propTypes = {\n    tasks: PropTypes.object.isRequired,\n    updateTask: PropTypes.func.isRequired,\n    deleteTask: PropTypes.func.isRequired,\n    loadSampleTasks: PropTypes.func.isRequired\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // Look up the current estimate on database\n    const estimate = await base.fetch(this.props.estimateId, { context: this });\n    // Claim it if there is no owner\n    if (!estimate.owner) {\n      // Save it\n      await base.post(`${this.props.estimateId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // Set the state of the inventory to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: estimate.owner || authData.user.uid\n    });\n    this.props.propagateAuthState(this.state);\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = (\n      <button className=\"logout\" onClick={this.logout}>\n        Log Out\n      </button>\n    );\n    // check if they're logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // Check if they're not the owner of the estimate\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <section className=\"tasks\">\n          <h1>Admin Area</h1>\n          <h2>Sorry, you're not the owner</h2>\n          <p>\n            That means that you have read-only access to this estimate. If you\n            want to suggest editions, please contact the author.\n          </p>\n          {logout}\n        </section>\n      );\n    }\n\n    // They must be the owner\n    return (\n      <section className=\"tasks edit\">\n        <div className=\"title\">\n          <h2>Tasks</h2>\n          {logout}\n        </div>\n        {Object.keys(this.props.tasks).map(key => (\n          <EditTaskForm\n            key={key}\n            index={key}\n            task={this.props.tasks[key]}\n            updateTask={this.props.updateTask}\n            deleteTask={this.props.deleteTask}\n            addToEstimate={this.props.addToEstimate}\n          />\n        ))}\n        <h3>Add a New Task</h3>\n        <AddTaskForm addTask={this.props.addTask} />\n        <button className=\"sample\" onClick={this.props.loadSampleTasks}>\n          Load Sample Tasks\n        </button>\n      </section>\n    );\n  }\n}\n\nexport default Tasks;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddTechStackForm extends React.Component {\n  imageRef = React.createRef();\n  typeRef = React.createRef();\n  nameRef = React.createRef();\n\n  createTechStack = event => {\n    // Stop the form from submitting\n    event.preventDefault();\n\n    // Create the tech object\n    const tech = {\n      image: this.imageRef.current.value,\n      type: this.typeRef.current.value,\n      name: this.nameRef.current.value\n    };\n    this.props.addTechStack(tech);\n    // Refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form onSubmit={this.createTechStack}>\n        <fieldset>\n          <label htmlFor=\"image\">Image URL</label>\n          <input\n            required\n            name=\"image\"\n            ref={this.imageRef}\n            type=\"text\"\n            placeholder=\"Add Image URL\"\n          />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"type\">Technology Type</label>\n          <select required name=\"type\" ref={this.typeRef}>\n            <option value=\"Frontend\">Frontend</option>\n            <option value=\"Backend\">Backend</option>\n            <option value=\"Tooling\">Tooling</option>\n          </select>\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"name\">Technology Name</label>\n          <input\n            required\n            name=\"name\"\n            ref={this.nameRef}\n            type=\"text\"\n            placeholder=\"Name of the Tech Used\"\n          />\n        </fieldset>\n        <button type=\"submit\">+ Add Item</button>\n      </form>\n    );\n  }\n}\n\nexport default AddTechStackForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddTechStackForm from \"./AddTechStackForm\";\n\nclass TechStack extends React.Component {\n  // Refs\n  techStackFormRef = React.createRef();\n\n  // Lifecycle methods\n  componentDidUpdate() {\n    if (this.techStackFormRef.current !== null) {\n      if (Object.keys(this.props.auth).length === 0) {\n        // if they're not logged in\n        this.techStackFormRef.current.classList.add(\"hidden\");\n      }\n      // if they're logged in, but they're now owners\n      else if (this.props.auth.owner !== this.props.auth.uid) {\n        this.techStackFormRef.current.classList.add(\"hidden\");\n      }\n      // if they're owners\n      else {\n        this.techStackFormRef.current.classList.remove(\"hidden\");\n      }\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"tech edit\" ref={this.techStackFormRef}>\n        <div className=\"title\">\n          <h2>Technologies to use</h2>\n        </div>\n        <h3>Add a New Tech</h3>\n        <AddTechStackForm addTechStack={this.props.addTechStack} />\n      </section>\n    );\n  }\n}\n\nexport default TechStack;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Technologies extends React.Component {\n  renderTech = key => {\n    const tech = this.props.details[key];\n    if (tech) {\n      return (\n        <li key={key}>\n          <img src={tech.image} alt={tech.name} />\n          <p>{tech.name}</p>\n        </li>\n      );\n    }\n  };\n\n  render() {\n    const techIds = Object.keys(this.props.details);\n    return (\n      <React.Fragment>\n        <section className=\"technologies\">\n          <div className=\"title\">\n            <hr />\n            <h2>Tech Stack</h2>\n          </div>\n          <ul>{techIds.map(this.renderTech)}</ul>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Technologies;\n","import React from \"react\";\n\nclass Terms extends React.Component {\n  render() {\n    return (\n      <section className=\"terms\">\n        <hr />\n        <h2>Terms and Conditions</h2>\n        <h3>Budget Validity</h3>\n        <p>\n          The following budget is valid for <strong>15 days</strong>, starting\n          on the date it was sent, <strong>{this.props.details.date}</strong>.\n          After that date, the availability of the assigned resources should be\n          verified and, if necessary, an adjustment in costs or deadlines should\n          be made.\n        </p>\n        <h3>Payment Conditions</h3>\n        <p>An invoice will be issued as proof of the work done.</p>\n        <h3>Time Estimations and Deadlines</h3>\n        <p>\n          The time estimation for the finished project delivery will start from\n          the budget's approval date, and not before. Any delay on the client's\n          side, either in the delivery of content or assets for the layout,\n          feedback during testing stages, in the final approval, or any other\n          action that might result in a block for the resources assigned, will\n          affect the final delivery date of the product.\n        </p>\n        <h3>Project's Scope and Feedback Limit</h3>\n        <p>\n          This quote includes the tasks and phases listed above, and any task or\n          phase that was not explicitly stated there must be quoted separately.\n          On the same line, the tasks above consider 2 (two) feedback and review\n          stages from the client. If more review stages are necessary, they must\n          be quoted separately. This quote includes bug fixing but is not\n          responsible for errors that may arise from hardware, apps or\n          third-party services that might be used during the Go-Live stage.\n        </p>\n        <h3>Hardware and third-party apps</h3>\n        <p>\n          The hardware, servers, domains, and third-party apps necessary for the\n          correct functioning of the app in a production environment will be\n          provided by the client.\n        </p>\n        <h3>Files Delivery</h3>\n        <p>\n          The files will be provided in a layered format. In order of\n          preference: Figma, Sketch, Adobe XD, Illustrator, Photoshop. Delivery\n          of raster files, like JPG, PNG, etc., will result in the need to\n          recreate the original files, which will be quoted separately.\n        </p>\n        <img\n          src=\"/images/jmg-signature.png\"\n          alt=\"Juan Martín García - Signature\"\n        />\n        <h4>Juan Mart&iacute;n Garc&iacute;a</h4>\n        <h5>\n          Monta&ntilde;eses 2678 3c,<br />1428, belgrano caba\n        </h5>\n        <h5>+54 9 11 3287 0377</h5>\n        <a href=\"mailto:hello@juangarcia.com.ar\">hello@juangarcia.com.ar</a>\n        <a\n          href=\"https://www.juangarcia.design\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          juangarcia.design\n        </a>\n      </section>\n    );\n  }\n}\n\nexport default Terms;\n","// This is just some sample data so you don't have to think of your own!\nconst tasks = {\n  task1: {\n    taskName: \"Specification of Requirements\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.83,\n    section: \"Definition\"\n  },\n  task2: {\n    taskName: \"Project Plan Update\",\n    minHours: 0.5,\n    avgHours: 0.5,\n    maxHours: 1,\n    expectedHours: 0.58,\n    section: \"Definition\"\n  },\n  task3: {\n    taskName: \"Mockups Revision and Design Suggestions\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Initiation\"\n  },\n  task4: {\n    taskName: \"Solution Architecture\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.08,\n    section: \"Initiation\"\n  },\n  task5: {\n    taskName: \"Development Environment Setup\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.83,\n    section: \"Initiation\"\n  },\n  task6: {\n    taskName: \"Project Management Tooling Setup\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Initiation\"\n  },\n  task7: {\n    taskName: \"Homepage Layout\",\n    minHours: 2,\n    avgHours: 3,\n    maxHours: 3,\n    expectedHours: 2.88,\n    section: \"Realization\"\n  },\n  task8: {\n    taskName: \"Contact Us Layout\",\n    minHours: 2,\n    avgHours: 3,\n    maxHours: 3,\n    expectedHours: 2.88,\n    section: \"Realization\"\n  },\n  task9: {\n    taskName:\n      \"Contact Us Functionality: Form Submission, Thank You and Error pages, and redirect to homepage\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.57,\n    section: \"Realization\"\n  },\n  task10: {\n    taskName: \"Our Services Layout\",\n    minHours: 1,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.16,\n    section: \"Realization\"\n  },\n  task11: {\n    taskName: \"Our Team Layout\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.57,\n    section: \"Realization\"\n  },\n  task12: {\n    taskName: \"Search Results Layout\",\n    minHours: 1,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.16,\n    section: \"Realization\"\n  },\n  task13: {\n    taskName: \"Log In Layout\",\n    minHours: 1,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.16,\n    section: \"Realization\"\n  },\n  task14: {\n    taskName: \"Forgot Password Layout\",\n    minHours: 1,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.16,\n    section: \"Realization\"\n  },\n  task15: {\n    taskName: \"Add Item Layout\",\n    minHours: 2,\n    avgHours: 2,\n    maxHours: 3,\n    expectedHours: 2.16,\n    section: \"Realization\"\n  },\n  task16: {\n    taskName: \"Available Items Layout\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.83,\n    section: \"Realization\"\n  },\n  task17: {\n    taskName: \"Homepage Responsive Layout\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.08,\n    section: \"Adaptation\"\n  },\n  task18: {\n    taskName: \"Contact Us Responsive Layout\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.08,\n    section: \"Adaptation\"\n  },\n  task19: {\n    taskName: \"Our Services Responsive Layout\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.08,\n    section: \"Adaptation\"\n  },\n  task20: {\n    taskName: \"Our Team Responsive Layout\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.08,\n    section: \"Adaptation\"\n  },\n  task21: {\n    taskName: \"Search Results Responsive Layout\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.08,\n    section: \"Adaptation\"\n  },\n  task22: {\n    taskName: \"Log In Responsive Layout\",\n    minHours: 0.5,\n    avgHours: 0.5,\n    maxHours: 1,\n    expectedHours: 0.58,\n    section: \"Adaptation\"\n  },\n  task23: {\n    taskName: \"Forgot Password Responsive Layout\",\n    minHours: 0.5,\n    avgHours: 0.5,\n    maxHours: 1,\n    expectedHours: 0.58,\n    section: \"Adaptation\"\n  },\n  task24: {\n    taskName: \"Add Item Responsive Layout\",\n    minHours: 1,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.16,\n    section: \"Adaptation\"\n  },\n  task25: {\n    taskName: \"Available Items Responsive Layout\",\n    minHours: 1,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.16,\n    section: \"Adaptation\"\n  },\n  task26: {\n    taskName: \"Website Testing and Local Bug Fixing\",\n    minHours: 1,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.16,\n    section: \"Testing\"\n  },\n  task27: {\n    taskName: \"Website Testing and In-Device Bug Fixing\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.57,\n    section: \"Testing\"\n  },\n  task28: {\n    taskName: \"Follow up and Rework based on Feedback\",\n    minHours: 2,\n    avgHours: 3,\n    maxHours: 4,\n    expectedHours: 2.57,\n    section: \"Testing\"\n  },\n  task29: {\n    taskName: \"Database Setup and Configuration\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 2,\n    expectedHours: 1.08,\n    section: \"Backend: Database\"\n  },\n  task30: {\n    taskName: \"Data Model Creation: Items\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.83,\n    section: \"Backend: Database\"\n  },\n  task31: {\n    taskName: \"Data Model Creation: Users and Permissions\",\n    minHours: 2,\n    avgHours: 3,\n    maxHours: 3,\n    expectedHours: 2.83,\n    section: \"Backend: Database\"\n  },\n  task32: {\n    taskName: \"Geolocalization API to show Items on a Map\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.83,\n    section: \"Backend: APIs\"\n  },\n  task33: {\n    taskName: \"Search Items API\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.83,\n    section: \"Backend: APIs\"\n  },\n  task34: {\n    taskName: \"Items Creation and Edition\",\n    minHours: 1,\n    avgHours: 2,\n    maxHours: 2,\n    expectedHours: 1.83,\n    section: \"Backend\"\n  },\n  task35: {\n    taskName: \"Image Uploading and Resizing\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Backend\"\n  },\n  task36: {\n    taskName: \"Slug Creation for URLs\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Backend\"\n  },\n  task37: {\n    taskName: \"User Account Creation and Database Storage\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Backend\"\n  },\n  task38: {\n    taskName: \"Log In and Log Out Flow\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Backend\"\n  },\n  task39: {\n    taskName: \"User Data Edition\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Backend\"\n  },\n  task40: {\n    taskName: \"Password Reset Flow\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Backend\"\n  },\n  task41: {\n    taskName: \"Automated Email Sending\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Backend\"\n  },\n  task42: {\n    taskName: \"Items Pagination\",\n    minHours: 0.5,\n    avgHours: 1,\n    maxHours: 1,\n    expectedHours: 0.91,\n    section: \"Backend\"\n  },\n  task43: {\n    taskName: \"Filtering Logic\",\n    minHours: 2,\n    avgHours: 3,\n    maxHours: 3,\n    expectedHours: 2.83,\n    section: \"Backend\"\n  }\n};\n\nexport default tasks;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Estimate from \"./Estimate\";\nimport Client from \"./Client\";\nimport Tasks from \"./Tasks\";\nimport TechStack from \"./TechStack\";\nimport Technologies from \"./Technologies\";\nimport Terms from \"./Terms\";\nimport sampleTasks from \"../sample-tasks\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    client: {},\n    tasks: {},\n    estimate: {},\n    auth: {},\n    resources: {},\n    technologies: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    this.ref = base.syncState(`${params.estimateId}/tasks`, {\n      context: this,\n      state: \"tasks\"\n    });\n\n    this.ref = base.syncState(`${params.estimateId}/estimate`, {\n      context: this,\n      state: \"estimate\"\n    });\n\n    this.ref = base.syncState(`${params.estimateId}/client`, {\n      context: this,\n      state: \"client\"\n    });\n\n    this.ref = base.syncState(`${params.estimateId}/resources`, {\n      context: this,\n      state: \"resources\"\n    });\n\n    this.ref = base.syncState(`${params.estimateId}/technologies`, {\n      context: this,\n      state: \"technologies\"\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addResource = resource => {\n    // Take a copy of the existing state we'll be updating\n    const resources = {\n      ...this.state.resources\n    };\n    // Add new resource to resource variable\n    resources[`resource${Date.now()}`] = resource;\n\n    // Set the new tasks and sections objects to state\n    this.setState({\n      resources\n    });\n  };\n\n  updateResource = (key, updatedResource) => {\n    const resources = { ...this.state.resources };\n    resources[key] = updatedResource;\n    this.setState({\n      resources\n    });\n  };\n\n  deleteResource = key => {\n    const resources = { ...this.state.resources };\n    resources[key] = null;\n    this.setState({\n      resources\n    });\n  };\n\n  addClient = () => {\n    // If there's a client set...\n    if (\n      this.props.location.client !== undefined ||\n      Object.keys(this.state.client).length !== 0\n    ) {\n      // Let's save its data into state...\n      this.setState({\n        client: this.props.location.client\n      });\n    } else {\n      this.props.history.push({\n        pathname: `/`\n      });\n    }\n  };\n\n  addTask = task => {\n    // Take a copy of the existing state we'll be updating\n    const tasks = { ...this.state.tasks };\n    // Add new task to tasks variable\n    tasks[`task${Date.now()}`] = task;\n\n    // Set the new tasks and sections objects to state\n    this.setState({\n      tasks\n    });\n  };\n\n  updateTask = (key, updatedTask) => {\n    // Copy of the current state\n    const tasks = { ...this.state.tasks };\n    // Update state\n    tasks[key] = updatedTask;\n    // Set that to state\n    this.setState({\n      tasks\n    });\n  };\n\n  deleteTask = key => {\n    // take a copy of state\n    const tasks = { ...this.state.tasks };\n    // remove the item\n    tasks[key] = null;\n    // Update State\n    this.setState({ tasks });\n  };\n\n  loadSampleTasks = () => {\n    this.setState({ tasks: sampleTasks });\n  };\n\n  addTechStack = tech => {\n    // Take a copy of the existing state we'll be updating\n    const technologies = { ...this.state.technologies };\n    // Add new task to tasks variable\n    technologies[`tech${Date.now()}`] = tech;\n\n    // Set the new tasks and sections objects to state\n    this.setState({\n      technologies\n    });\n  };\n\n  addToEstimate = key => {\n    // take a copy of state\n    const estimate = { ...this.state.estimate };\n    // add to the order or update the number\n    estimate[key] = estimate[key] + 1 || 1;\n    // Call setState to update our state\n    this.setState({ estimate });\n  };\n\n  removeFromEstimate = key => {\n    // take a copy of state\n    const estimate = { ...this.state.estimate };\n    // remove item from estimate\n    estimate[key] = null;\n    // Call setState to update our state\n    this.setState({ estimate });\n  };\n\n  propagateAuthState = state => {\n    this.setState({\n      auth: {\n        owner: state.owner,\n        uid: state.uid\n      }\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Client details={this.state.client} addClient={this.addClient} />\n        <Estimate\n          tasks={this.state.tasks}\n          estimate={this.state.estimate}\n          removeFromEstimate={this.removeFromEstimate}\n          estimateId={this.props.match.params.estimateId}\n          auth={this.state.auth}\n          addResource={this.addResource}\n          updateResource={this.updateResource}\n          deleteResource={this.deleteResource}\n          resources={this.state.resources}\n        />\n        <Technologies details={this.state.technologies} />\n        <Terms details={this.state.client} />\n        <Tasks\n          addTask={this.addTask}\n          updateTask={this.updateTask}\n          deleteTask={this.deleteTask}\n          loadSampleTasks={this.loadSampleTasks}\n          addToEstimate={this.addToEstimate}\n          tasks={this.state.tasks}\n          estimateId={this.props.match.params.estimateId}\n          propagateAuthState={this.propagateAuthState}\n        />\n        <TechStack auth={this.state.auth} addTechStack={this.addTechStack} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport EstimateCreator from \"./EstimateCreator\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={EstimateCreator} />\n      <Route path=\"/estimate/:estimateId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}